# Makefile.in generated by automake 1.10.3 from Makefile.am.
# tutorial/poisson/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# DO NOT CHANGE THESE DEFAULT VALUES
#
# use, for example, the following statement instead:
# make GRIDTYPE=ALUGRID_SIMPLEX GRIDDIM=3 POLORDER=2

# -*- Makefile -*-
# $Id$

#
# this file should be included into any Makefile.am so that we can
# easily introduce new global rules. DO NOT OVERUSE!
#

# -*- Makefile -*-
# $Id$

# -*- Makefile -*-
# $Id: sourcescheck 5183 2008-04-27 17:37:08Z christi $

# -*- Makefile -*-
# $Id$

#
# check-log
#
# This file implements the build-rules needed by the automated tests.
# "make check-log" will build the whole package and run all tests. For
# each test a log file under $(topsrc_dir)/check-log is created which
# contains the name of the test and what kind of test it was (build,
# lib, run, ...). If a test fails this is logged, but all otehr tests
# are still run.
#
# make OPTIONS:
# LOG_TIMING - specific command to measure the time needed for each test
#              example: "make LOG_TIMING='time -p' check-log"
#
# IMPLEMENTATION: check-log depends on different targets for different
# kinds of tests. These can run idividually by calling check-log-XXX.
# Possible variants are (in order of dependence)
#   - libs    (build all libraries)
#   - build   (build all applications and tests)
#   - test    (run each test from $(TESTS))
#   - sources (run sourcescheck in each directory)
#   - headers (run headercheck for each header)
#   - dir     (create dir entries for database, no actual tests are run)
#

# -*- Makefile -*-
# $Id: global-rules 5267 2008-09-10 10:45:42Z christi $


pkgdatadir = $(datadir)/dune-fem-howto
pkglibdir = $(libdir)/dune-fem-howto
pkgincludedir = $(includedir)/dune-fem-howto
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = poisson$(EXEEXT) adaptive$(EXEEXT) \
	constraint$(EXEEXT)
DIST_COMMON = $(poisson_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/am/checklog \
	$(top_srcdir)/am/documentation $(top_srcdir)/am/global-rules \
	$(top_srcdir)/am/headercheck $(top_srcdir)/am/sourcescheck
subdir = tutorial/poisson
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/dependencies.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am_adaptive_OBJECTS = adaptive-mainadaptive.$(OBJEXT)
adaptive_OBJECTS = $(am_adaptive_OBJECTS)
am__DEPENDENCIES_1 =
adaptive_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_constraint_OBJECTS = constraint-mainconstraints.$(OBJEXT)
constraint_OBJECTS = $(am_constraint_OBJECTS)
constraint_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_poisson_OBJECTS = poisson-main.$(OBJEXT)
poisson_OBJECTS = $(am_poisson_OBJECTS)
poisson_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(adaptive_SOURCES) $(constraint_SOURCES) $(poisson_SOURCES)
DIST_SOURCES = $(adaptive_SOURCES) $(constraint_SOURCES) \
	$(poisson_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(poissondir)"
poissonHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(poisson_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /u/s_girk01/dune-super-mfem/dune-fem-howto/missing --run aclocal-1.10
ACLOCAL_AMFLAGS = -I . -I m4 -I /u/s_girk01/dune-super-mfem/dune-common/m4 -I /u/s_girk01/dune-super-mfem/dune-grid/m4 -I /u/s_girk01/dune-super-mfem/dune-istl/m4 -I /u/s_girk01/dune-super-mfem/dune-localfunctions/m4 -I /u/s_girk01/dune-super-mfem/dune-fem/m4
ALBERTA1D_CPPFLAGS = $(ALBERTA_INCLUDE_CPPFLAGS) -DALBERTA_DIM=1 -DENABLE_ALBERTA
ALBERTA1D_LDFLAGS = 
ALBERTA1D_LIBS = -L$(DUNE_GRID_LIBDIR) -ldunealbertagrid_1d -ldunegrid $(ALBERTA_LIBPATHFLAGS) -lalberta_1d $(ALBERTA_BASE_LIBS)
ALBERTA2D_CPPFLAGS = $(ALBERTA_INCLUDE_CPPFLAGS) -DALBERTA_DIM=2 -DENABLE_ALBERTA
ALBERTA2D_LDFLAGS = 
ALBERTA2D_LIBS = -L$(DUNE_GRID_LIBDIR) -ldunealbertagrid_2d -ldunegrid $(ALBERTA_LIBPATHFLAGS) -lalberta_2d $(ALBERTA_BASE_LIBS)
ALBERTA3D_CPPFLAGS = $(ALBERTA_INCLUDE_CPPFLAGS) -DALBERTA_DIM=3 -DENABLE_ALBERTA
ALBERTA3D_LDFLAGS = 
ALBERTA3D_LIBS = -L$(DUNE_GRID_LIBDIR) -ldunealbertagrid_3d -ldunegrid $(ALBERTA_LIBPATHFLAGS) -lalberta_3d $(ALBERTA_BASE_LIBS)
ALBERTA4D_CPPFLAGS = 
ALBERTA4D_LDFLAGS = 
ALBERTA4D_LIBS = 
ALBERTA5D_CPPFLAGS = 
ALBERTA5D_LDFLAGS = 
ALBERTA5D_LIBS = 
ALBERTA6D_CPPFLAGS = 
ALBERTA6D_LDFLAGS = 
ALBERTA6D_LIBS = 
ALBERTA7D_CPPFLAGS = 
ALBERTA7D_LDFLAGS = 
ALBERTA7D_LIBS = 
ALBERTA8D_CPPFLAGS = 
ALBERTA8D_LDFLAGS = 
ALBERTA8D_LIBS = 
ALBERTA9D_CPPFLAGS = 
ALBERTA9D_LDFLAGS = 
ALBERTA9D_LIBS = 
ALBERTAROOT = /share/dune/Modules/modules_x86_64/alberta-2.0
ALBERTA_BASE_LIBS = $(ALBERTA_LIBPATHFLAGS) -lalberta_util 
ALBERTA_CPPFLAGS = $(ALBERTA$(ALBERTA_DIM)D_CPPFLAGS)
ALBERTA_DIM = $(WORLDDIM)
ALBERTA_DIM_CPPFLAGS = 
ALBERTA_INCLUDE_CPPFLAGS = -I/share/dune/Modules/modules_x86_64/alberta-2.0/include/alberta
ALBERTA_LDFLAGS = $(ALBERTA$(ALBERTA_DIM)D_LDFLAGS)
ALBERTA_LIBPATHFLAGS = -L$(ALBERTAROOT)/lib
ALBERTA_LIBS = $(ALBERTA$(ALBERTA_DIM)D_LIBS)
ALGLIB_CPPFLAGS = 
ALGLIB_LIBS = 
ALL_PKG_CPPFLAGS =  -I/usr/include  -I/u/s_girk01/dune-super-mfem/dune-common  -I/u/s_girk01/dune-super-mfem/dune-grid  -I/u/s_girk01/dune-super-mfem/dune-istl  -I/u/s_girk01/dune-super-mfem/dune-localfunctions  -I/u/s_girk01/dune-super-mfem/dune-fem   ${DUNEMPICPPFLAGS} -I/u/s_girk01/dune-super-mfem/dune-common -DGRIDDIM=$(GRIDDIM) -DWORLDDIM=$(WORLDDIM) -D$(GRIDTYPE) -pthread -I/share/dune/Modules/modules_x86_64/grape -pthread -DENABLE_GRAPE ${ALBERTA_CPPFLAGS} ${UG_CPPFLAGS} ${DUNEMPICPPFLAGS} -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include/serial -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include/duneinterface -DENABLE_ALUGRID -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include/parallel ${GMP_CPPFLAGS} -I/u/s_girk01/dune-super-mfem/dune-grid ${SUPERLU_CPPFLAGS} -I/u/s_girk01/dune-super-mfem/dune-istl -I/u/s_girk01/dune-super-mfem/dune-localfunctions -I/u/s_girk01/dune-super-mfem/dune-fem
ALL_PKG_LDFLAGS = -L/share/dune/local/lib -L/usr/lib64 -L/usr/lib64             ${DUNEMPILDFLAGS}   -pthread -pthread -Wl,--rpath -Wl,/share/dune/Modules/modules_x86_64/grape ${ALBERTA_LDFLAGS} ${UG_LDFLAGS} ${DUNEMPILDFLAGS}      
ALL_PKG_LIBS = -L/u/s_girk01/dune-super-mfem/dune-fem/lib -ldunefem   ${SUPERLU_LIBS} -L/u/s_girk01/dune-super-mfem/dune-grid/lib -ldunegrid ${GMP_LIBS} -L/share/dune/Modules/modules_x86_64/ALUGrid-1.22/lib -lalugrid ${DUNEMPILIBS} ${UG_LIBS} ${ALBERTA_LIBS} -L/share/dune/Modules/modules_x86_64/grape -lgr -lGL  -lm -lXext -lGL  -lm  -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon ${DUNEMPILIBS}  -L/u/s_girk01/dune-super-mfem/dune-fem/lib -ldunefem   -L/u/s_girk01/dune-super-mfem/dune-grid/lib -ldunegrid -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon  -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon   -L/u/s_girk01/dune-super-mfem/dune-grid/lib -ldunegrid  -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon     -L/u/s_girk01/dune-super-mfem/dune-fem/lib -ldunefem      -L/u/s_girk01/dune-super-mfem/dune-grid/lib -ldunegrid  -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon   -lm 
ALUGRID_CPPFLAGS = ${DUNEMPICPPFLAGS} -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include/serial -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include/duneinterface -DENABLE_ALUGRID -I/share/dune/Modules/modules_x86_64/ALUGrid-1.22/include/parallel
ALUGRID_LDFLAGS = ${DUNEMPILDFLAGS}
ALUGRID_LIBS = -L/share/dune/Modules/modules_x86_64/ALUGrid-1.22/lib -lalugrid ${DUNEMPILIBS}
AMIRAMESH_CPPFLAGS = 
AMIRAMESH_LDFLAGS = 
AMIRAMESH_LIBS = 
AMTAR = ${SHELL} /u/s_girk01/dune-super-mfem/dune-fem-howto/missing --run tar
AM_CPPFLAGS = $(DUNE_CPPFLAGS) -I$(top_srcdir)
AM_LDFLAGS = $(DUNE_LDFLAGS) $(DUNE_LIBS)
AR = ar
AUTOCONF = ${SHELL} /u/s_girk01/dune-super-mfem/dune-fem-howto/missing --run autoconf
AUTOHEADER = ${SHELL} /u/s_girk01/dune-super-mfem/dune-fem-howto/missing --run autoheader
AUTOMAKE = ${SHELL} /u/s_girk01/dune-super-mfem/dune-fem-howto/missing --run automake-1.10
AWK = gawk
BIBTEX = bibtex
BLAS_LIBS = -lblas
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib64
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CONVERT = convert
CPP = gcc -E
CPPFLAGS =  -I/u/s_girk01/dune-super-mfem/dune-common -I/u/s_girk01/dune-super-mfem/dune-grid -I/u/s_girk01/dune-super-mfem/dune-istl -I/u/s_girk01/dune-super-mfem/dune-localfunctions -I/u/s_girk01/dune-super-mfem/dune-fem
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -funroll-loops -DDEBUG
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = dot
DOXYGEN = doxygen
DSYMUTIL = 
DUMPBIN = 
DUNEALBERTA_LIBPATHFLAGS = -L$(top_builddir)/lib
DUNEMPICPPFLAGS = 
DUNEMPILDFLAGS = 
DUNEMPILIBS = 
DUNEWEBDIR = no
DUNE_COMMON_CPPFLAGS = 
DUNE_COMMON_LDFLAGS = 
DUNE_COMMON_LIBDIR = /u/s_girk01/dune-super-mfem/dune-common/lib
DUNE_COMMON_LIBS = 
DUNE_COMMON_ROOT = /u/s_girk01/dune-super-mfem/dune-common
DUNE_COMMON_VERSION = 2.1-svn
DUNE_COMMON_VERSION_MAJOR = 2
DUNE_COMMON_VERSION_MINOR = 1
DUNE_COMMON_VERSION_REVISION = 0
DUNE_CPPFLAGS =  -I/u/s_girk01/dune-super-mfem/dune-common -I/u/s_girk01/dune-super-mfem/dune-grid -I/u/s_girk01/dune-super-mfem/dune-istl -I/u/s_girk01/dune-super-mfem/dune-localfunctions -I/u/s_girk01/dune-super-mfem/dune-fem
DUNE_FEM_CPPFLAGS = 
DUNE_FEM_HOWTO_VERSION = 1.2
DUNE_FEM_HOWTO_VERSION_MAJOR = 1
DUNE_FEM_HOWTO_VERSION_MINOR = 2
DUNE_FEM_HOWTO_VERSION_REVISION = 0
DUNE_FEM_LDFLAGS = 
DUNE_FEM_LIBDIR = /u/s_girk01/dune-super-mfem/dune-fem/lib
DUNE_FEM_LIBS = 
DUNE_FEM_ROOT = /u/s_girk01/dune-super-mfem/dune-fem
DUNE_FEM_VERSION = 1.2.0
DUNE_FEM_VERSION_MAJOR = 1
DUNE_FEM_VERSION_MINOR = 2
DUNE_FEM_VERSION_REVISION = 0
DUNE_GRID_CPPFLAGS = 
DUNE_GRID_LDFLAGS = 
DUNE_GRID_LIBDIR = /u/s_girk01/dune-super-mfem/dune-grid/lib
DUNE_GRID_LIBS = 
DUNE_GRID_ROOT = /u/s_girk01/dune-super-mfem/dune-grid
DUNE_GRID_VERSION = 2.1-svn
DUNE_GRID_VERSION_MAJOR = 2
DUNE_GRID_VERSION_MINOR = 1
DUNE_GRID_VERSION_REVISION = 0
DUNE_ISTL_CPPFLAGS = 
DUNE_ISTL_LDFLAGS = 
DUNE_ISTL_LIBS = 
DUNE_ISTL_ROOT = /u/s_girk01/dune-super-mfem/dune-istl
DUNE_ISTL_VERSION = 2.1-svn
DUNE_ISTL_VERSION_MAJOR = 2
DUNE_ISTL_VERSION_MINOR = 1
DUNE_ISTL_VERSION_REVISION = 0
DUNE_LDFLAGS =           
DUNE_LIBS =  -L/u/s_girk01/dune-super-mfem/dune-fem/lib -ldunefem      -L/u/s_girk01/dune-super-mfem/dune-grid/lib -ldunegrid  -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon 
DUNE_LOCALFUNCTIONS_CPPFLAGS = 
DUNE_LOCALFUNCTIONS_LDFLAGS = 
DUNE_LOCALFUNCTIONS_LIBS = 
DUNE_LOCALFUNCTIONS_ROOT = /u/s_girk01/dune-super-mfem/dune-localfunctions
DUNE_LOCALFUNCTIONS_VERSION = 2.1-svn
DUNE_LOCALFUNCTIONS_VERSION_MAJOR = 2
DUNE_LOCALFUNCTIONS_VERSION_MINOR = 1
DUNE_LOCALFUNCTIONS_VERSION_REVISION = 0
DUNE_MAINTAINER_NAME = dune@mathematik.uni-freiburg.de
DUNE_MOD_NAME = dune-fem-howto
DUNE_MOD_VERSION = 1.2
DVIPDF = dvipdf
DVIPS = dvips
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_PARALLEL = no
EXEEXT = 
F77 = gfortran
FC = gfortran
FCFLAGS = -g -O2
FCLIBS =  -L/share/dune/local/lib -L/usr/lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2 -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -lgfortranbegin -lgfortran -lm
FFLAGS = -g -O2
FGREP = /bin/grep -F
FLIBS =  -L/share/dune/local/lib -L/usr/lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2 -L/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -lgfortranbegin -lgfortran -lm
GL_CFLAGS = -pthread
GL_LDFLAGS = -pthread
GL_LIBS = -lGL  -lm
GMP_CPPFLAGS = -I/usr/include -DENABLE_GMP=1
GMP_LIBS = -L/usr/lib -lgmpxx -lgmp
GRAPE_CPPFLAGS = -I/share/dune/Modules/modules_x86_64/grape -pthread -DENABLE_GRAPE
GRAPE_LDFLAGS = -pthread -Wl,--rpath -Wl,/share/dune/Modules/modules_x86_64/grape
GRAPE_LIBS = -L/share/dune/Modules/modules_x86_64/grape -lgr -lGL  -lm -lXext
GREP = /bin/grep
GRIDDIM = 2
GRIDDIM_CPPFLAGS = -DGRIDDIM=$(GRIDDIM) -DWORLDDIM=$(WORLDDIM) -D$(GRIDTYPE)
GRIDTYPE = YASPGRID
INKSCAPE = inkscape
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LAPACK_LIBS = -llapack
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =           
LIBOBJS = 
LIBS =  -L/u/s_girk01/dune-super-mfem/dune-fem/lib -ldunefem      -L/u/s_girk01/dune-super-mfem/dune-grid/lib -ldunegrid  -L/u/s_girk01/dune-super-mfem/dune-common/lib -ldunecommon  -lblas
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /u/s_girk01/dune-super-mfem/dune-fem-howto/missing --run makeinfo
METIS = 
METIS_INCLUDE = 
METIS_LDFLAGS = 
METIS_LIB = 
MKDIR_P = /bin/mkdir -p
MPICC = 
MPILIBS = 
MPI_CPPFLAGS =  -D DEPRECATED_MPI_CPPFLAGS_USED
MPI_LDFLAGS = 
MPI_VERSION = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = dune-fem-howto
PACKAGE_BUGREPORT = dune@mathematik.uni-freiburg.de
PACKAGE_NAME = dune-fem-howto
PACKAGE_STRING = dune-fem-howto 1.2
PACKAGE_TARNAME = dune-fem-howto
PACKAGE_VERSION = 1.2
PARDG_CPPFLAGS = 
PARDG_LDFLAGS = 
PARDG_LIBS = 
PARDISO_LIBS = 
PARMETIS = 
PARMETIS_CPPFLAGS = 
PARMETIS_LDFLAGS = 
PARMETIS_LIBS = 
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /data/dune_work/public/local/bin/pkg-config
PSURFACE_CPPFLAGS = 
PSURFACE_LDFLAGS = 
PSURFACE_LIBS = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
REQUIRES =  dune-common >= 2.0  dune-grid >= 2.0  dune-fem >= 1.2.0 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SUPERLU_CPPFLAGS = 
SUPERLU_DIST_CPPFLAGS = -I/usr/local/SRC 
SUPERLU_DIST_LDFLAGS = -L/usr/local/ 
SUPERLU_DIST_LIBS = 
SUPERLU_LIBS = 
TEX = latex
UG_CPPFLAGS = 
UG_LDFLAGS = 
UG_LIBS = 
UMFPACK_CPPFLAGS = 
UMFPACK_LDFLAGS = 
UMFPACK_LIBS = 
VERSION = 1.2
WML = wml
WORLDDIM = $(GRIDDIM)
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /u/s_girk01/dune-super-mfem/dune-fem-howto/tutorial/poisson
abs_srcdir = /u/s_girk01/dune-super-mfem/dune-fem-howto/tutorial/poisson
abs_top_builddir = /u/s_girk01/dune-super-mfem/dune-fem-howto
abs_top_srcdir = /u/s_girk01/dune-super-mfem/dune-fem-howto
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
ac_ct_FC = gfortran
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
am_dir = /u/s_girk01/dune-super-mfem/dune-common/am
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /u/s_girk01/dune-super-mfem/dune-fem-howto/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /u/s_girk01/dune-super-mfem/dune-fem-howto
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
POLORDER = 1

# compilation and linking flags
POISSON_CPPFLAGS = -DPOLORDER=$(POLORDER) -DFEMTIMER

# settings for 'poisson'
poisson_SOURCES = main.cc
poisson_CPPFLAGS = $(ALL_PKG_CPPFLAGS) $(POISSON_CPPFLAGS) $(DUNEMPICPPFLAGS)
poisson_LDADD = $(ALL_PKG_LDFLAGS) $(ALL_PKG_LIBS) $(LOCAL_LIBS) $(DUNEMPILIBS)

# settings for 'adaptive' (not parallel)
adaptive_SOURCES = mainadaptive.cc
adaptive_CPPFLAGS = $(ALL_PKG_CPPFLAGS) $(POISSON_CPPFLAGS)
adaptive_LDADD = $(ALL_PKG_LDFLAGS) $(ALL_PKG_LIBS) $(LOCAL_LIBS)

# settings for 'constraint'
constraint_SOURCES = mainconstraints.cc
constraint_CPPFLAGS = $(ALL_PKG_CPPFLAGS) $(POISSON_CPPFLAGS) $(DUNEMPICPPFLAGS)
constraint_LDADD = $(ALL_PKG_LDFLAGS) $(ALL_PKG_LIBS) $(LOCAL_LIBS) $(DUNEMPILIBS)

# clean also temporary files 
CLEANFILES = manager.*.log *.dgf.* dgfparser.log

# install these headers 
poissondir = $(includedir)/tutorial/poisson
poisson_HEADERS = problemdata.hh algorithm.hh algorithmadaptive.hh estimator.hh \
laplaceoperator.hh functional.hh dirichletconstraints.hh neumannconstraints.hh constraints.hh


# files included extra in dist 
EXTRA_DIST = *.dgf parameter 
sourcescheck_IGNORE = aclocal.m4 dependencies.m4
sourcescheck_LIST = $(SOURCES) $(DIST_SOURCES) $(HEADERS) $(DIST_HEADERS) \
	$(sourcescheck_NOSOURCES) $(dist_noinst_DATA) $(EXTRA_DIST)

headercheck_PATTERN = *.hh
LOG_FILE = $(top_srcdir)/check-log.log
LOG_DIR = $(top_srcdir)/check-log
LOG_STORE = $(SHELL) $(DUNE_COMMON_ROOT)/bin/check-log-store $(LOG_FILE) $(LOG_DIR)
LOG_TIMING = 
LOG_SET_OPTIONS = \
	path=`test "$(subdir)" = "." && \
	echo "/dune-fem-howto" || echo "/dune-fem-howto/$(subdir)"`; \
	ppath=`dirname $$path`; \
	dir=`basename $$path`

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/am/global-rules $(top_srcdir)/am/sourcescheck $(top_srcdir)/am/headercheck $(top_srcdir)/am/checklog $(top_srcdir)/am/documentation $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tutorial/poisson/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tutorial/poisson/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
adaptive$(EXEEXT): $(adaptive_OBJECTS) $(adaptive_DEPENDENCIES) 
	@rm -f adaptive$(EXEEXT)
	$(CXXLINK) $(adaptive_OBJECTS) $(adaptive_LDADD) $(LIBS)
constraint$(EXEEXT): $(constraint_OBJECTS) $(constraint_DEPENDENCIES) 
	@rm -f constraint$(EXEEXT)
	$(CXXLINK) $(constraint_OBJECTS) $(constraint_LDADD) $(LIBS)
poisson$(EXEEXT): $(poisson_OBJECTS) $(poisson_DEPENDENCIES) 
	@rm -f poisson$(EXEEXT)
	$(CXXLINK) $(poisson_OBJECTS) $(poisson_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/adaptive-mainadaptive.Po
include ./$(DEPDIR)/constraint-mainconstraints.Po
include ./$(DEPDIR)/poisson-main.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

adaptive-mainadaptive.o: mainadaptive.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(adaptive_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT adaptive-mainadaptive.o -MD -MP -MF $(DEPDIR)/adaptive-mainadaptive.Tpo -c -o adaptive-mainadaptive.o `test -f 'mainadaptive.cc' || echo '$(srcdir)/'`mainadaptive.cc
	mv -f $(DEPDIR)/adaptive-mainadaptive.Tpo $(DEPDIR)/adaptive-mainadaptive.Po
#	source='mainadaptive.cc' object='adaptive-mainadaptive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(adaptive_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o adaptive-mainadaptive.o `test -f 'mainadaptive.cc' || echo '$(srcdir)/'`mainadaptive.cc

adaptive-mainadaptive.obj: mainadaptive.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(adaptive_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT adaptive-mainadaptive.obj -MD -MP -MF $(DEPDIR)/adaptive-mainadaptive.Tpo -c -o adaptive-mainadaptive.obj `if test -f 'mainadaptive.cc'; then $(CYGPATH_W) 'mainadaptive.cc'; else $(CYGPATH_W) '$(srcdir)/mainadaptive.cc'; fi`
	mv -f $(DEPDIR)/adaptive-mainadaptive.Tpo $(DEPDIR)/adaptive-mainadaptive.Po
#	source='mainadaptive.cc' object='adaptive-mainadaptive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(adaptive_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o adaptive-mainadaptive.obj `if test -f 'mainadaptive.cc'; then $(CYGPATH_W) 'mainadaptive.cc'; else $(CYGPATH_W) '$(srcdir)/mainadaptive.cc'; fi`

constraint-mainconstraints.o: mainconstraints.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(constraint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT constraint-mainconstraints.o -MD -MP -MF $(DEPDIR)/constraint-mainconstraints.Tpo -c -o constraint-mainconstraints.o `test -f 'mainconstraints.cc' || echo '$(srcdir)/'`mainconstraints.cc
	mv -f $(DEPDIR)/constraint-mainconstraints.Tpo $(DEPDIR)/constraint-mainconstraints.Po
#	source='mainconstraints.cc' object='constraint-mainconstraints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(constraint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o constraint-mainconstraints.o `test -f 'mainconstraints.cc' || echo '$(srcdir)/'`mainconstraints.cc

constraint-mainconstraints.obj: mainconstraints.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(constraint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT constraint-mainconstraints.obj -MD -MP -MF $(DEPDIR)/constraint-mainconstraints.Tpo -c -o constraint-mainconstraints.obj `if test -f 'mainconstraints.cc'; then $(CYGPATH_W) 'mainconstraints.cc'; else $(CYGPATH_W) '$(srcdir)/mainconstraints.cc'; fi`
	mv -f $(DEPDIR)/constraint-mainconstraints.Tpo $(DEPDIR)/constraint-mainconstraints.Po
#	source='mainconstraints.cc' object='constraint-mainconstraints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(constraint_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o constraint-mainconstraints.obj `if test -f 'mainconstraints.cc'; then $(CYGPATH_W) 'mainconstraints.cc'; else $(CYGPATH_W) '$(srcdir)/mainconstraints.cc'; fi`

poisson-main.o: main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poisson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poisson-main.o -MD -MP -MF $(DEPDIR)/poisson-main.Tpo -c -o poisson-main.o `test -f 'main.cc' || echo '$(srcdir)/'`main.cc
	mv -f $(DEPDIR)/poisson-main.Tpo $(DEPDIR)/poisson-main.Po
#	source='main.cc' object='poisson-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poisson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poisson-main.o `test -f 'main.cc' || echo '$(srcdir)/'`main.cc

poisson-main.obj: main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poisson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poisson-main.obj -MD -MP -MF $(DEPDIR)/poisson-main.Tpo -c -o poisson-main.obj `if test -f 'main.cc'; then $(CYGPATH_W) 'main.cc'; else $(CYGPATH_W) '$(srcdir)/main.cc'; fi`
	mv -f $(DEPDIR)/poisson-main.Tpo $(DEPDIR)/poisson-main.Po
#	source='main.cc' object='poisson-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poisson_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poisson-main.obj `if test -f 'main.cc'; then $(CYGPATH_W) 'main.cc'; else $(CYGPATH_W) '$(srcdir)/main.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-poissonHEADERS: $(poisson_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(poissondir)" || $(MKDIR_P) "$(DESTDIR)$(poissondir)"
	@list='$(poisson_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(poissonHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(poissondir)/$$f'"; \
	  $(poissonHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(poissondir)/$$f"; \
	done

uninstall-poissonHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(poisson_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(poissondir)/$$f'"; \
	  rm -f "$(DESTDIR)$(poissondir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(poissondir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-poissonHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local uninstall-poissonHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-poissonHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-local \
	uninstall-poissonHEADERS


sourcescheck: sourcescheck-recursive

#	@(for f in $(sourcescheck_LIST) fnord; do echo $$f; done) | \
#	 grep '\.[hc][hc]$$' | sort | uniq > header_CHECK.install
sourcescheck-am:
	@echo $(sourcescheck_LIST) | tr ' ' '\n' | \
	 grep '\.[hcm][hc4]$$' | sort | uniq > header_CHECK.install
	@(ls $(srcdir); echo $(sourcescheck_DUMMY)) | \
	 grep '\.[hcm][hc4]$$' | sort | uniq > header_CHECK.present
	@RESULT=0; \
	if diff header_CHECK.* | grep ^[\<\>] -q; then \
		echo "==== WARNING ===="; \
	    echo "Directory: $(srcdir)"; \
		echo "Files present but not installed:"; \
		diff -u header_CHECK.install header_CHECK.present | \
		grep -v ^+++ | grep ^+; \
		echo "Files listed for install but not present:"; \
		diff -u header_CHECK.install header_CHECK.present | \
		grep -v ^--- | grep ^-; \
		echo "==== END ===="; \
		RESULT=1; \
	fi; \
	rm -f header_CHECK.install header_CHECK.present; \
	exit $$RESULT

sourcescheck-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: sourcescheck sourcescheck-recursive sourcescheck-am

# set 
# headercheck_IGNORE = foo.hh
# to ignore foo.hh

hctest.o: hctest.cc
	$(CXX) -I$(top_builddir) -I$(top_srcdir) -DHEADERCHECK \
	  $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
	  $(DUNEMPICPPFLAGS) $(ALL_PKG_CPPFLAGS) -c -o $@ $<

headercheck:
	@if test x"$$HEADER" = "x"; then \
          if test x"$$SILENT" = "x"; then \
            SILENTSTR='SILENT=1' ; \
          fi ; \
	  $(MAKE) $$SILENTSTR $(AM_MAKEFLAGS) headercheck-recursive; \
	else \
          if test x"$$SILENT" = "x"; then \
            SILENTSTR='SILENT=0' ; \
          fi ; \
	  $(MAKE) $$SILENTSTR $(AM_MAKEFLAGS) headercheck-am; \
	fi

headercheck-am:
	@if test x"$$HEADER" != "x"; then \
	  list="$$HEADER"; \
	else \
	  pushd "$(srcdir)" > /dev/null; \
	  list=`echo $(headercheck_PATTERN)`; \
	  popd > /dev/null; \
	fi; \
    test -z "$$NO_CONFIG_H" && NO_CONFIG_H=0; \
    test -z "$$SILENT" && SILENT=1; \
	test "$$list" != "$(headercheck_PATTERN)" || exit 0; \
	for f in $$list; do \
	echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; \
	  if echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; then continue; fi; \
	  HEADER="$(subdir)/$$f"; \
	  echo "checking $$HEADER"; \
	  CCFILE=hctest.cc; \
	  OFILE=hctest.o; \
	  LOGFILE=hctest.log; \
	  rm -f $$CCFILE; \
	  test $$NO_CONFIG_H -ne 0 && echo "    without config.h" \
	    || echo "#include <config.h>" > $$CCFILE; \
	  echo "#include <$${HEADER}>" >> $$CCFILE; \
	  echo "#include <$${HEADER}>" >> $$CCFILE; \
	  echo "int main () { return 0; }" >> $$CCFILE; \
	  make 	$$OFILE > $$LOGFILE 2>&1; \
	  SUCCESS=$$?; \
	  if ! (test $$SUCCESS -eq 0 && test -e $$OFILE); then \
	    echo "Error in $$HEADER"; \
            test $$SILENT -ne 0 && echo "run with SILENT=0 to show details" || cat $$LOGFILE; \
	  fi; \
	  rm -f $$OFILE; \
	  rm -f $$CCFILE; \
	  rm -f $$LOGFILE; \
	  test $$SUCCESS -eq 0 || exit $$SUCCESS; \
	done

headercheck-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $(subdir)/$$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: headercheck headercheck-recursive headercheck-am

# vim:set filetype=automake:

$(DUNE_COMMON_ROOT)/bin/check-log-store: $(DUNE_COMMON_ROOT)/bin/check-log-store.in
	cd $(DUNE_COMMON_ROOT)/bin/ && $(MAKE) check-log-store

check-log: $(DUNE_COMMON_ROOT)/bin/check-log-store
check-log:
	rm -f $(LOG_FILE)

check-log: check-log-libs
check-log: check-log-build
check-log: check-log-test
check-log: check-log-sources
check-log: check-log-headers
check-log: check-log-dir

check-log-libs: check-log-libs-recursive
check-log-build: check-log-build-recursive
check-log-test: check-log-test-recursive
check-log-sources: check-log-sources-recursive
check-log-headers: check-log-headers-recursive
check-log-dir: check-log-dir-recursive

check-log-headers-am:
	$(LOG_SET_OPTIONS); \
	list=`echo $(headercheck_PATTERN)`; \
	test "$$list" != "$(headercheck_PATTERN)" || exit 0; \
	for f in $$list; do \
	  echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; \
	    if echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; then continue; fi; \
	  $(LOG_TIMING) ($(MAKE) headercheck-am SILENT=0 HEADER=$$f; \
	    $(MAKE) headercheck-am SILENT=0 HEADER=$$f NO_CONFIG_H=1) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "headercheck" "$$f" "$$path"; \
	done

check-log-sources-am:
	$(LOG_SET_OPTIONS); \
	$(LOG_TIMING) $(MAKE) sourcescheck-am > $(LOG_FILE) 2>&1; \
	$(LOG_STORE) "sources" "Makefile.am" "$$path"

check-log-libs-am:
	$(LOG_SET_OPTIONS); \
	for lib in $(LTLIBRARIES); do \
	  $(LOG_TIMING) ($(MAKE) $$lib) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "lib" "$$lib" "$$path"; \
	done;

check-log-build-am:
	$(LOG_SET_OPTIONS); \
	for target in $(check_PROGRAMS) $(PROGRAMS); do \
	  $(LOG_TIMING) ($(MAKE) $$target) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "build" "$$target" "$$path"; \
	done;

check-log-test-am:
	@LOG () { \
	  echo "$$1" > $(LOG_FILE).2; \
	  cat $(LOG_FILE) >> $(LOG_FILE).2; \
	  mv $(LOG_FILE).2 $(LOG_FILE); \
	}; \
	$(LOG_SET_OPTIONS); \
	for tst in $(TESTS); do \
	  if test -f ./$$tst; then dir=./; \
	  elif test -f $$tst; then dir=; \
	  else dir="$(srcdir)/"; fi; \
	  echo "TEST $${dir}$$tst"; \
	  if $(LOG_TIMING) $(TESTS_ENVIRONMENT) $${dir}$$tst > $(LOG_FILE) 2>&1; then \
	    case " $(XFAIL_TESTS) " in \
	    *" $$tst "*) \
	      LOG "ERROR: XPASS ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 1 0; \
	    ;; \
	    *) \
	      LOG "SUCCESS: PASS ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 0 0; \
	    ;; \
	    esac; \
	  elif test $$? -ne 77; then \
	    case " $(XFAIL_TESTS) " in \
	    *" $$tst "*) \
	      LOG "SUCCESS: XFAIL ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 0 0; \
	    ;; \
	    *) \
	      LOG "ERROR: FAIL ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 1 0; \
	    ;; \
	    esac; \
	  else \
	    LOG "WARNING: SKIP ($$tst)"; \
		$(LOG_STORE) "run" "$$tst" "$$path" 0 1; \
	  fi; \
	done;

check-log-dir-am:
	$(LOG_SET_OPTIONS); \
	$(LOG_STORE) "dir" "$$dir" "$$ppath"

check-log-libs-recursive \
check-log-build-recursive \
check-log-test-recursive \
check-log-sources-recursive \
check-log-headers-recursive \
check-log-dir-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: check-log \
	check-log-lib check-log-lib-am check-log-lib-recursive \
	check-log-build check-log-build-am check-log-build-recursive \
	check-log-test check-log-test-am check-log-test-recursive \
	check-log-sources check-log-sources-am check-log-sources-recursive \
	check-log-dir check-log-dir-am check-log-dir-recursive

maintainer-clean-local: doc-clean-am

###
# build doc / web-install recursively
doc-clean-am: clean-am doc-clean-documentation doc-clean-local
doc-am: doc-all-documentation doc-local
web-install-am: web-install-local

doc-local:
doc-clean-local:
web-install-local:

web-install: web-install-recursive
doc: doc-recursive
doc-clean: doc-clean-recursive

web-install-recursive \
doc-clean-recursive \
doc-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $(subdir)/$$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

install-data-local: install-documentation
uninstall-local: uninstall-documentation

####
# "implementations"

doc-all-documentation: $(DOCFILES)

doc-clean-documentation:
	-test -z "$(DOCFILES)" || rm -f $(DOCFILES)

install-documentation: $(DOCFILES) install-documentation-local
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(mkdir_p) "$(DESTDIR)$(docdir)"
	@list='$(DOCFILES) $(DOCFILES_EXTRA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-documentation: uninstall-documentation-local
	@$(NORMAL_UNINSTALL)
	@list='$(DOCFILES) $(DOCFILES_EXTRA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files

.PHONY: uninstall-documentation uninstall-documentation-local \
	install-documentation install-documentation-local \
    doc-clean-am doc-am web-install-am \
    doc-local doc-clean-local web-install-local \
	web-install doc doc-clean \
	web-install-recursive doc-clean-recursive doc-recursive

# add "sourcescheck"-target testing if all source files are mentioned

# check consistency of the headers (see FS#394)

# add "check-log"-target to create automated build logs

# add "doc"-target to create and clean documentation
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
